initSidebarItems({"constant":[["REPETITIONS",""]],"fn":[["main",""]],"mod":[["day01","Day 1: This solution uses a sliding window of 2 values for the first part. In the second part we expand the window to 4 values as `[a, b, c].sum() - [b, c, d].sum() == a - d`, so we only need to consider the first and last values to determine if the three value windows increase or decrease."],["day02","Day 2: The main part of the effort for this solution is reading the input into a correct structure. From there following the computations are straightforward. In the second part, I leveraged the fact that one of the two parts of the Direction is zero to avoid branching logic, making the code take half as long as the branching version of the `fold`."],["day03","Day 3: Iâ€™m not entirely happy with this solution because it feel very cumbersome. The first part is messy because it is faster to count all bytes at the same time. For the second part, partitioning seems the most straightforward approach, but I have a lot of code duplication."],["load","Load: This module has the code for loading input from file to a string buffer"],["output","Output: This module collects some of my `println!` boilerplate between the days."],["prelude",""]],"struct":[["Error",""],["RunData",""],["Timing",""]],"type":[["Result",""]]});